<Activity mc:Ignorable="sap sap2010" x:Class="Desc_Information" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="str_n" Type="InArgument(x:String)" />
    <x:Property Name="cell" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1382,4202</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Desc_Information_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="54">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Desc_Information" sap:VirtualizedContainerService.HintSize="1392,4137" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="temp">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="1" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="sqn" />
      <Variable x:TypeArguments="x:String" Name="dec" />
      <Variable x:TypeArguments="x:String" Name="qty" />
      <Variable x:TypeArguments="x:String" Name="unit" />
      <Variable x:TypeArguments="x:String" Name="sub_total" />
      <Variable x:TypeArguments="x:String" Name="tax" />
      <Variable x:TypeArguments="x:String" Name="gst" />
      <Variable x:TypeArguments="x:String" Name="total" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InterruptibleWhile Condition="[temp&gt;0]" DisplayName="While" sap:VirtualizedContainerService.HintSize="1350,4045" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1314,3880" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="str" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[temp=1]" sap:VirtualizedContainerService.HintSize="1272,309" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_n,"(?&lt;=AMOUNT\s)("+temp.ToString+"\s*S)(.*TYPE:\sSERVICES)(?=\s*2)").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_n,"((?&lt;=AMOUNT\s)("+temp.ToString+"\s*S)|("+temp.ToString+"\s*S))(.*TYPE:\sSERVICES)(?=\s*"+(temp+1).ToString+")").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[String.IsNullOrEmpty(str)]" sap:VirtualizedContainerService.HintSize="1272,3439" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="809,3282" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[temp=1]" sap:VirtualizedContainerService.HintSize="767,309" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_n,"(?&lt;=AMOUNT\s)("+temp.ToString+"\s*S)(.*TYPE:\sSERVICES)").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_n,"(("+temp.ToString+"\s*S))(.*TYPE:\sSERVICES)").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <If Condition="[String.IsNullOrEmpty(str)]" sap:VirtualizedContainerService.HintSize="767,2841" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[temp]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="418,2684" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="test" sap:VirtualizedContainerService.HintSize="376,2592" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[sqn]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"^\d").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;F&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="Sheet1" Text="[sqn]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(str,"^\d"," ").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(dec,"\d\s*EA\s*((\d+,\d+.\d+)|(\d+.\d+))\s*((\d+,\d+.\d+)|(\d+.\d+))\s*((\d+,\d+.\d+)|(\d+.\d+))\s*IGST\s*\d+.\d+%\s*((\d+,\d+.\d+)|(\d+.\d+))"," ").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(dec,"(\s*|-)((\d+,\d+\.\d+)|(\d+\.\d+))\s*"," ").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;G&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="Sheet1" Text="[dec]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[qty]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(\d\s*EA)").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;H&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_11" SheetName="Sheet1" Text="[qty]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_71">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[unit]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=EA\s*)((\d+\.\d+)|(\d+,\d+\.\d+))").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;I&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_12" SheetName="Sheet1" Text="[unit]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[sub_total]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=((EA\s*\d+\.\d+)|(EA\s*\d+,\d+\.\d+))\s*)((\d+\.\d+)|(\d+,\d+\.\d+))").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;J&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_13" SheetName="Sheet1" Text="[sub_total]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_73">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tax]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"((\d+\.\d+)|(\d+,\d+\.\d+))(?=\s*IGST)").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;K&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_14" SheetName="Sheet1" Text="[tax]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_74">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(IGST).*((\s|-)((\d+,\d+\.\d+)|(\d+\.\d+)))").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(gst,"(?&lt;=IGST\s*\d+\.\d+%).*(?=((\s|-)((\d+,\d+\.\d+)|(\d+\.\d+))))"," ").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;L&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_15" SheetName="Sheet1" Text="[gst]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=IGST\s*\d+\.\d+%\s*)((\s|)((\d+,\d+\.\d+)|(\d+\.\d+)))").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:WriteCell Cell="[&quot;M&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_16" SheetName="Sheet1" Text="[total]" WorkbookPath="PDf to Excel.xlsx" />
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_77">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[cell]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[cell+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_78">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[temp]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="418,2684" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="test" sap:VirtualizedContainerService.HintSize="376,2592" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[sqn]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"^\d").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;F&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="[sqn]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(str,"^\d"," ").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(dec,"\d\s*EA\s*((\d+,\d+.\d+)|(\d+.\d+))\s*((\d+,\d+.\d+)|(\d+.\d+))\s*((\d+,\d+.\d+)|(\d+.\d+))\s*IGST\s*\d+.\d+%\s*((\d+,\d+.\d+)|(\d+.\d+))"," ").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dec]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(dec,"(\s*|-)((\d+,\d+\.\d+)|(\d+\.\d+))\s*"," ").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;G&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" Text="[dec]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[qty]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(\d\s*EA)").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;H&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="Sheet1" Text="[qty]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[unit]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=EA\s*)((\d+\.\d+)|(\d+,\d+\.\d+))").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;I&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" Text="[unit]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[sub_total]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=((EA\s*\d+\.\d+)|(EA\s*\d+,\d+\.\d+))\s*)((\d+\.\d+)|(\d+,\d+\.\d+))").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;J&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" Text="[sub_total]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[tax]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"((\d+\.\d+)|(\d+,\d+\.\d+))(?=\s*IGST)").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;K&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Sheet1" Text="[tax]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_61">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(IGST).*((\s|-)((\d+,\d+\.\d+)|(\d+\.\d+)))").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[gst]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(gst,"(?&lt;=IGST\s*\d+\.\d+%).*(?=((\s|-)((\d+,\d+\.\d+)|(\d+\.\d+))))"," ").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;L&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="Sheet1" Text="[gst]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[total]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str,"(?&lt;=IGST\s*\d+\.\d+%\s*)((\s|)((\d+,\d+\.\d+)|(\d+\.\d+)))").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:WriteCell Cell="[&quot;M&quot;+cell.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,115" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="Sheet1" Text="[total]" WorkbookPath="PDf to Excel.xlsx" />
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[cell]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[cell+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[temp]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[temp+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ui:InterruptibleWhile.Body>
    </ui:InterruptibleWhile>
  </Sequence>
</Activity>